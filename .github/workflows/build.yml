# yaml-language-server: $schema=https://json.schemastore.org/github-workflow.json

name: "Build and Push to Registry"

on:
  push:
    branches:
      - main
    paths:
      - "src/**"
      - "tests/**"
      - "data/**"
      - ".github/workflows/build.yml"
  pull_request:
    paths:
      - "src/**"
      - "tests/**"
      - "data/**"
      - ".github/workflows/build.yml"

env:
  IS_MAIN: ${{ github.ref == 'ref/heads/main' }}
  DOCKER_NAMESPACE: "cpeq"
  DOCKER_IMAGE: "infolettre-automatique"
  AZURE_CORE_OUTPUT: none # Prevents the Azure CLI from logging to stdout to prevent credentials leak

jobs:
  validate:
    runs-on: ubuntu-latest
    steps:
      - name: "Checkout code"
        uses: actions/checkout@v4
        with:
          ref: ${{ github.ref }}

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 21

      - name: Install @devcontainers/cli
        run: npm install --location=global @devcontainers/cli@0.58.0

      - name: Start Dev Container
        run: |
          PYTHON_VERSION=${{ matrix.python-version }} devcontainer up --workspace-folder .

      - name: Lint package
        run: devcontainer exec --workspace-folder . poe lint

      - name: Test package
        run: devcontainer exec --workspace-folder . poe test

      - name: Upload Coverage Report
        uses: actions/upload-artifact@v4
        with:
          path: reports/htmlcov/
          name: coverage-report
          retention-days: 7

  update-function:
    runs-on: ubuntu-latest
    needs: validate
    environment: dev
    env:
      PYTHON_VERSION: "3.12"
      POETRY_VERSION: "1.8.3"
    steps:
      - name: "Checkout code"
        uses: actions/checkout@v4
        with:
          ref: ${{ github.ref }}

      - name: Setup Python ${{ env.PYTHON_VERSION }} Environment
        uses: actions/setup-python@v4
        with:
          python-version: ${{ env.PYTHON_VERSION }}

      - name: "Resolve project dependencies"
        shell: bash
        run: |
          python -m pip install --upgrade pipx
          pipx install poetry==$POETRY_VERSION
          poetry install

      - name: "Update Azure Function"
        uses: Azure/functions-action@v1
        with:
          app-name: ${{ env.AZURE_FUNCTIONAPP_NAME }}
          package: .
          publish-profile: ${{ secrets.AZURE_FUNCTIONAPP_PUBLISH_PROFILE }}
          scm-do-build-during-deployment: true
          enable-oryx-build: true
