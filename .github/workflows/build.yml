# yaml-language-server: $schema=https://json.schemastore.org/github-workflow.json

name: "Build and Push to Registry"

on:
  push:
    branches:
      - main
    paths:
      - "src/**"
      - "tests/**"
      - "data/**"
  pull_request:
    paths:
      - "src/**"
      - "tests/**"
      - "data/**"
  workflow_dispatch:

env:
  IS_MAIN: ${{ github.ref == 'ref/heads/main' }}
  DOCKER_NAMESPACE: "cpeq"
  DOCKER_IMAGE: "infolettre-automatique"
  AZURE_CORE_OUTPUT: none # Prevents the Azure CLI from logging to stdout to prevent credentials leak

jobs:
  validate:
    runs-on: ubuntu-latest
    steps:
      - name: "Checkout code"
        uses: actions/checkout@v4
        with:
          ref: ${{ github.ref }}

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 21

      - name: Install @devcontainers/cli
        run: npm install --location=global @devcontainers/cli@0.58.0

      - name: Start Dev Container
        run: |
          PYTHON_VERSION=${{ matrix.python-version }} devcontainer up --workspace-folder .

      - name: Lint package
        run: devcontainer exec --workspace-folder . poe lint

      - name: Test package
        run: devcontainer exec --workspace-folder . poe test

      - name: Upload Coverage Report
        uses: actions/upload-artifact@v4
        with:
          path: reports/htmlcov/
          name: coverage-report
          retention-days: 7

  build_and_push:
    runs-on: ubuntu-latest
    needs: validate
    environment: dev
    steps:
      - name: "Checkout code"
        uses: actions/checkout@v4
        with:
          ref: ${{ github.ref }}

      - name: "Set Variables"
        id: vars
        run: |
          echo "DOCKER_IMAGE_TAG=$(git rev-parse --short HEAD)" >> $GITHUB_OUTPUT

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: "Docker login"
        uses: docker/login-action@v3
        with:
          registry: ${{ vars.DOCKER_REGISTRY }}
          username: ${{ secrets.PIPELINE_CLIENT_ID }} # https://portal.azure.com/#view/Microsoft_AAD_RegisteredApps/ApplicationMenuBlade/~/Overview/appId/7ad2fb8b-5bce-4f28-88b3-97ecaf4e48ad/isMSAApp~/false
          password: ${{ secrets.PIPELINE_CLIENT_SECRET }}

      - name: Build and Push
        uses: docker/build-push-action@v5
        with:
          push: true
          tags: ${{ vars.DOCKER_REGISTRY }}/${{ env.DOCKER_NAMESPACE }}/${{ env.DOCKER_IMAGE }}:${{ steps.vars.outputs.DOCKER_IMAGE_TAG }}
